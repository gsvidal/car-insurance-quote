{"version":3,"sources":["components/Header.js","components/Form.js","helper.js","components/Summary.js","components/Price.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["ContainerHeader","styled","header","TextHeader","h1","Header","title","Field","div","Input","input","Label","label","Select","select","InputRadio","Button","button","Error","Form","setSummary","setSpinner","useState","base","brand","year","plan","data","setData","error","setError","errorInput","setErrorInput","handleChange","event","target","name","value","action","onSubmit","preventDefault","trim","price","diff","Date","getFullYear","getYearDiff","increment","getBrand","parseFloat","getPlan","toFixed","setTimeout","quote","htmlFor","placeholder","type","id","onChange","className","checked","ContainerSummary","List","ul","ListItem","li","Summary","Msg","p","Msg2","ContainerTextQuote","TextQuote","Price","TransitionGroup","CSSTransition","classNames","timeout","enter","exit","Spinner","Container","ContainerForm","App","summary","spinner","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAIMA,EAAkBC,IAAOC,OAAV,wLASfC,EAAaF,IAAOG,GAAV,0HAmBDC,EAZA,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACf,OACE,cAACN,EAAD,UACE,cAACG,EAAD,UAAaG,O,gBClBnB,I,kBAAMC,EAAQN,IAAOO,IAAV,yPAcLC,EAAQR,IAAOS,MAAV,sNAWLC,EAAQV,IAAOW,MAAV,4JAQLC,EAASZ,IAAOa,OAAV,8LASNC,EAAad,IAAOS,MAAV,+CAGVM,EAASf,IAAOgB,OAAV,6UAgBNC,EAAQjB,IAAOO,IAAV,sKAgLIW,EAvKF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,WAEzB,EAA0BC,mBAAS,CACjCC,KAAM,GACNC,MAAO,GACPC,KAAM,GACNC,KAAM,KAJR,mBAAQC,EAAR,KAAcC,EAAd,KAMA,EAA4BN,oBAAS,GAArC,mBAAQO,EAAR,KAAeC,EAAf,KACA,EAAsCR,oBAAS,GAA/C,mBAAQS,EAAR,KAAoBC,EAApB,KAGQT,EAA4BI,EAA5BJ,KAAMC,EAAsBG,EAAtBH,MAAOC,EAAeE,EAAfF,KAAMC,EAASC,EAATD,KAGrBO,EAAe,SAAAC,GACnBN,EAAQ,2BACHD,GADE,kBAEJO,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAiDtC,OACE,uBACEC,OAAO,GACPC,SA/CiB,SAAAL,GAGnB,GAFAA,EAAMM,iBAEc,KAAjBhB,EAAMiB,QAAiC,KAAhBhB,EAAKgB,QAAiC,KAAhBf,EAAKe,OAArD,CAGO,GAAGlB,EAAO,EAGf,OAFAO,GAAS,QACTE,GAAc,GAIhBF,GAAS,GACTE,GAAc,GAGd,IAAIU,EAAQnB,EAGNoB,ECpHH,SAAqBlB,GAC1B,OAAO,IAAImB,MAAOC,cAAgBpB,EDmHnBqB,CAAYrB,GAGzBiB,GAAiB,EAAI,IAAKC,EAK1BD,ECvHG,SAAkBlB,GACvB,IAAIuB,EAEJ,OAAOvB,GACL,IAAK,WACHuB,EAAY,IACZ,MACF,IAAK,WACHA,EAAY,KACZ,MACF,IAAK,QACHA,EAAY,KAMhB,OAAOA,EDsGGC,CAASxB,GAASkB,EAI1BA,EAAQO,YCtGL,SAAiBvB,GACtB,MAAiB,UAATA,EAAmB,IAAO,IDqGZwB,CAAQxB,GAAQgB,GAAOS,QAAQ,IAGnD9B,GAAW,GACX+B,YAAW,WACThC,EAAW,CACTiC,MAAOX,EACPf,SAEFN,GAAW,KACV,UArCDS,GAAS,IAyCX,UAIID,GACA,cAACX,EAAD,wCAEAa,GACA,cAACb,EAAD,mDAEF,eAACX,EAAD,WACE,cAACI,EAAD,CAAO2C,QAAQ,OAAf,2BACA,cAAC7C,EAAD,CACE8C,YAAY,OACZC,KAAK,SACLpB,KAAK,OACLqB,GAAG,OACHpB,MAAOd,EACPmC,SAAUzB,OAGd,eAAC1B,EAAD,WACE,cAACI,EAAD,CAAO2C,QAAQ,QAAf,oBACA,eAACzC,EAAD,CACEuB,KAAK,QACLqB,GAAG,QACHpB,MAAOb,EACPkC,SAAUzB,EAJZ,UAME,wBAAQI,MAAM,GAAd,0BACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,QAAd,yBAIJ,eAAC9B,EAAD,WACE,cAACI,EAAD,CAAO2C,QAAQ,OAAf,mBACA,eAACzC,EAAD,CACEuB,KAAK,OACLqB,GAAG,OACHpB,MAAOZ,EACPiC,SAAUzB,EAJZ,UAME,wBAAQI,MAAM,GAAd,0BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,wBAIJ,eAAC9B,EAAD,WACE,mBAAGoD,UAAU,aAAb,mBACA,eAACpD,EAAD,CAAOoD,UAAU,SAAjB,UAEA,cAAC5C,EAAD,CACEyC,KAAK,QACLpB,KAAK,OACLqB,GAAG,aACHpB,MAAM,QACNuB,QAAkB,UAATlC,EACTgC,SAAUzB,IACV,cAACtB,EAAD,CAAO2C,QAAQ,aAAf,mBAGF,cAACvC,EAAD,CACEyC,KAAK,QACLpB,KAAK,OACLqB,GAAG,YACHpB,MAAM,OACNuB,QAAkB,SAATlC,EACTgC,SAAUzB,IACV,cAACtB,EAAD,CAAO2C,QAAQ,YAAf,wBAKJ,cAACtC,EAAD,CAAQwC,KAAK,SAAb,2BEnOAK,EAAmB5D,IAAOO,IAAV,wIAOhBsD,EAAO7D,IAAO8D,GAAV,yKAQJC,EAAW/D,IAAOgE,GAAV,8CA4BCC,EAxBC,SAAC,GAAY,IAAXvC,EAAU,EAAVA,KAGRH,EAAsBG,EAAtBH,MAAOC,EAAeE,EAAfF,KAAMC,EAASC,EAATD,KAErB,MAAc,KAAVF,GAAyB,KAATC,GAAwB,KAATC,EAAqB,KAGtD,eAACmC,EAAD,WACE,gDACA,eAACC,EAAD,WACE,eAACE,EAAD,qBAAkBxC,KAClB,eAACwC,EAAD,oBAAiBvC,KACjB,eAACuC,EAAD,oBAAiBtC,Y,gBC/BnByC,EAAMlE,IAAOmE,EAAV,iIAMHC,EAAOpE,IAAOmE,EAAV,sNAaJE,EAAqBrE,IAAOO,IAAV,gKAOlB+D,EAAYtE,IAAOmE,EAAV,0JA4DAI,EAnDD,SAAC,GAAa,IAAZnB,EAAW,EAAXA,MAEd,OACY,IAAVA,EAEA,cAACc,EAAD,wDAEA,eAAC,WAAD,WACE,cAACG,EAAD,UACE,cAACG,EAAA,EAAD,CACEd,UAAU,QADZ,SAGE,cAACe,EAAA,EAAD,CACEC,WAAW,QAEXC,QAAS,CAACC,MAAO,IAAKC,KAAM,KAH9B,SAKE,eAACP,EAAD,6BAA2BlB,EAA3B,gBAHKA,OASX,eAACgB,EAAD,WACE,2DACA,6CACA,+BACE,gDACA,gDACA,gDAEF,4CACA,6BACE,2EAEF,4CACA,+BACE,6CACA,+CAEF,gEC7DOU,G,MAhBC,WACd,OACE,sBAAKpB,UAAU,eAAf,UACE,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,0BCNfqB,GAAY/E,IAAOO,IAAV,wGAMTyE,GAAgBhF,IAAOO,IAAV,6MAuDJ0E,OA7Cf,WAEE,MAAgC5D,mBAAS,CACvC+B,MAAO,EACP1B,KAAM,CACJH,MAAO,GACPC,KAAM,GACNC,KAAM,MALV,mBAAQyD,EAAR,KAAiB/D,EAAjB,KASA,EAAgCE,oBAAS,GAAzC,mBAAQ8D,EAAR,KAAiB/D,EAAjB,KAGQgC,EAAgB8B,EAAhB9B,MAAO1B,EAASwD,EAATxD,KAEf,OACE,eAACqD,GAAD,WACE,cAAC,EAAD,CACE1E,MAAM,wBAER,eAAC2E,GAAD,WACE,cAAC,EAAD,CACE7D,WAAYA,EACZC,WAAYA,IAEZ+D,GACF,cAAC,EAAD,KAEGA,GACH,eAAC,WAAD,WACE,cAAC,EAAD,CACEzD,KAAMA,IAER,cAAC,EAAD,CACE0B,MAAOA,cC/CJgC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.ef33f23f.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContainerHeader = styled.header`\r\n  background-color: #26C6DA;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: #FFFFFF;\r\n  border-top-left-radius: 10px;\r\n  border-top-right-radius: 10px;\r\n`;\r\n\r\nconst TextHeader = styled.h1`\r\n  font-size: 2rem;\r\n  margin: 0;\r\n  font-family: \"Slabo 27px\", serif;\r\n  text-align: center;\r\n`;\r\n\r\nconst Header = ({title}) => {\r\n  return(\r\n    <ContainerHeader>\r\n      <TextHeader>{title}</TextHeader>\r\n    </ContainerHeader>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport { getYearDiff, getBrand, getPlan } from '../helper';\r\n\r\nconst Field = styled.div`\r\n  display: flex;\r\n  margin-bottom: 1rem;\r\n  align-items: center;\r\n  & div {\r\n    margin: 0;\r\n  }\r\n  @media (max-width: 400px) {\r\n    & .inputs {\r\n      flex-direction: column;\r\n      justify-content: center;\r\n    }\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 15px;\r\n  border: 1px solid #00838F;\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n  -webkit-appearance: none;\r\n  &::placeholder {\r\n    color: #aaa;\r\n  }\r\n`;\r\nconst Label = styled.label`\r\n  display: inline-block;\r\n  flex: 0 0 110px;\r\n  @media (max-width: 400px) {\r\n    margin-right: 10px;\r\n    flex: 0 0 30px;\r\n  }\r\n`;\r\nconst Select = styled.select`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background-color: #eee;\r\n  border: 1px solid #e1e1e1;\r\n  border-radius: 5px;\r\n  -webkit-appearance: none;\r\n`;\r\nconst InputRadio = styled.input`\r\n  margin: 0 1rem;\r\n`;\r\nconst Button = styled.button`\r\n  background-color: #00838F;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  color: #fff;\r\n  text-transform: capitalize;\r\n  font-weight: bold;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color .3s ease;\r\n  &:hover {\r\n    background-color: #26CDDA;\r\n  }\r\n`;\r\nconst Error = styled.div`\r\n  background-color: red;\r\n  color: white;\r\n  padding: 1rem;\r\n  margin-bottom: 1rem;\r\n  width: calc( 100% - 2rem);\r\n  text-align: center;\r\n`;\r\n\r\nconst Form = ({setSummary, setSpinner}) => {\r\n\r\n  const [ data, setData ] = useState({\r\n    base: \"\",\r\n    brand: \"\",\r\n    year: \"\",\r\n    plan: \"\"\r\n  });\r\n  const [ error, setError ] = useState(false);\r\n  const [ errorInput, setErrorInput ] = useState(false);\r\n\r\n  // Extract state values\r\n  const { base, brand, year, plan } = data;\r\n\r\n  // Read Form data and setData\r\n  const handleChange = event => {\r\n    setData({\r\n      ...data,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  // when hits submit\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if(brand.trim() === \"\" || year.trim() === \"\" || plan.trim() === \"\") {\r\n      setError(true);\r\n      return;\r\n    } else if(base < 1 ){\r\n      setError(false);\r\n      setErrorInput(true);\r\n      return;\r\n    }\r\n    \r\n    setError(false);\r\n    setErrorInput(false);\r\n  \r\n    // base is assigned to price variable\r\n    let price = base;\r\n\r\n    // obtain years diff\r\n    const diff = getYearDiff(year);\r\n\r\n    // For Each year substract 3%\r\n    price = price * (1 - 0.03*diff);\r\n\r\n    // American +15%\r\n    // Asian +5%\r\n    // European +30%\r\n    price = getBrand(brand) * price;\r\n\r\n    // Basic + 20%\r\n    // Full + 50%\r\n    price = parseFloat((getPlan(plan) * price).toFixed(2));\r\n\r\n    // Setting summary after finish loading\r\n    setSpinner(true);\r\n    setTimeout(() => {\r\n      setSummary({\r\n        quote: price,\r\n        data\r\n      })\r\n      setSpinner(false);\r\n    }, 2000);  \r\n  }\r\n\r\n  return(\r\n    <form\r\n      action=\"\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      { error && \r\n        <Error>All fields are required !</Error>\r\n      } \r\n      { errorInput &&\r\n        <Error>Base rate has to be greater than 0 !</Error>\r\n      }\r\n      <Field>\r\n        <Label htmlFor=\"base\">Base Rate($):</Label>\r\n        <Input \r\n          placeholder=\"2000\"\r\n          type=\"number\"\r\n          name=\"base\" \r\n          id=\"base\"\r\n          value={base}\r\n          onChange={handleChange}\r\n        />\r\n      </Field>\r\n      <Field>\r\n        <Label htmlFor=\"brand\">Brand:</Label>\r\n        <Select \r\n          name=\"brand\" \r\n          id=\"brand\"\r\n          value={brand}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"\">-- Select --</option>\r\n          <option value=\"American\">American</option>\r\n          <option value=\"European\">European</option>\r\n          <option value=\"Asian\">Asian</option>\r\n        </Select>\r\n      </Field>\r\n\r\n      <Field>\r\n        <Label htmlFor=\"year\">Year:</Label>\r\n        <Select \r\n          name=\"year\" \r\n          id=\"year\"\r\n          value={year}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"\">-- Select --</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n          <option value=\"2018\">2018</option>\r\n          <option value=\"2017\">2017</option>\r\n          <option value=\"2016\">2016</option>\r\n          <option value=\"2015\">2015</option>\r\n          <option value=\"2014\">2014</option>\r\n          <option value=\"2013\">2013</option>\r\n          <option value=\"2012\">2012</option>\r\n          <option value=\"2011\">2011</option>\r\n          <option value=\"2010\">2010</option>\r\n          <option value=\"2009\">2009</option>\r\n          <option value=\"2008\">2008</option>\r\n        </Select>\r\n      </Field>\r\n\r\n      <Field>\r\n        <p className=\"plan-label\">Plan:</p>\r\n        <Field className=\"inputs\">\r\n        \r\n        <InputRadio \r\n          type=\"radio\"\r\n          name=\"plan\"\r\n          id=\"plan-basic\"\r\n          value=\"Basic\"\r\n          checked={plan === \"Basic\"}\r\n          onChange={handleChange}\r\n        /><Label htmlFor=\"plan-basic\">Basic</Label>\r\n        \r\n        \r\n        <InputRadio \r\n          type=\"radio\"\r\n          name=\"plan\"\r\n          id=\"plan-full\"\r\n          value=\"Full\"\r\n          checked={plan === \"Full\"}\r\n          onChange={handleChange}\r\n        /><Label htmlFor=\"plan-full\">Full</Label>\r\n        \r\n        </Field>\r\n      </Field>\r\n\r\n      <Button type=\"submit\">Get quote</Button>\r\n\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  setSummary: PropTypes.func.isRequired, \r\n  setSpinner: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Form;","// Obtain year difference (between option selected and current)\r\nexport function getYearDiff(year) {\r\n  return new Date().getFullYear() - year;\r\n}\r\n\r\n// Calculate total to pay according to brand\r\nexport function getBrand(brand) {\r\n  let increment;\r\n\r\n  switch(brand) {\r\n    case \"European\":\r\n      increment = 1.3;\r\n      break;\r\n    case \"American\":\r\n      increment = 1.15;\r\n      break;\r\n    case \"Asian\":\r\n      increment = 1.05;\r\n      break;    \r\n    default: \r\n      break;\r\n  }\r\n\r\n  return increment;\r\n}\r\n\r\n// Calculate insurance type\r\nexport function getPlan(plan) {\r\n  return (plan === \"Basic\" ? 1.20 : 1.50);\r\n}","import React, { Fragment } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContainerSummary = styled.div`\r\n  padding: 1rem;\r\n  text-align: center;\r\n  background-color: #00ffcc;\r\n  color: #000;\r\n  margin-top: 1rem;\r\n`;\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: space-between;\r\n  width: 80%;\r\n  margin: 15px auto;\r\n`;\r\nconst ListItem = styled.li`\r\n  margin: 5px 0;\r\n`;\r\n\r\nconst Summary = ({data}) => {\r\n\r\n  // Extract data\r\n  const { brand, year, plan } = data;\r\n\r\n  if( brand === \"\" || year === \"\" || plan === \"\" ) return null;\r\n\r\n  return(\r\n    <ContainerSummary>\r\n      <h2>Quote Summary:</h2>\r\n      <List>\r\n        <ListItem>Brand: {brand}</ListItem>\r\n        <ListItem>Year: {year}</ListItem>\r\n        <ListItem>Plan: {plan}</ListItem>\r\n      </List>\r\n    </ContainerSummary>\r\n    \r\n  );\r\n}\r\n\r\nSummary.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Summary;","import React, { Fragment } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst Msg = styled.p`\r\n  background-color: rgb(127,224,237);\r\n  margin-top: 2rem;\r\n  padding: 1rem;\r\n  text-align: center;\r\n`;\r\nconst Msg2 = styled.p`\r\n  background-color: #26C6DA30;\r\n  margin-top: 2rem;\r\n  padding: 1rem;\r\n  text-align: center;\r\n  color: grey;\r\n  & p {\r\n    font-size: .75rem;\r\n  }\r\n  & li {\r\n    font-size: .5rem;\r\n  }\r\n`;\r\nconst ContainerTextQuote = styled.div`\r\n  padding: .4rem;\r\n  border: 1px solid #26C6DA;\r\n  background-color: rgb(127,224,237);\r\n  margin-top: 1rem;\r\n  position: relative;\r\n`;\r\nconst TextQuote = styled.p`\r\n  color: #00838F;\r\n  padding: 1rem;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  margin: 0;\r\n`;\r\n\r\nconst Price = ({quote}) => {\r\n\r\n  return(\r\n    quote === 0 \r\n    ? \r\n    <Msg>Choose brand, year and car insurance plan</Msg> \r\n    : \r\n    <Fragment>\r\n      <ContainerTextQuote>\r\n        <TransitionGroup\r\n          className=\"price\"\r\n        >\r\n          <CSSTransition\r\n            classNames=\"price\"\r\n            key={quote}\r\n            timeout={{enter: 500, exit: 500}}  \r\n          >\r\n            <TextQuote>Total Quote: $ {quote} per year</TextQuote>\r\n\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        \r\n      </ContainerTextQuote>\r\n      <Msg2>\r\n        <p>Increments over base rate:</p>\r\n        <p>Brand rate: </p>\r\n        <ul>\r\n          <li>American + 15%</li> \r\n          <li>European + 15%</li> \r\n          <li>Asian + 15%</li> \r\n        </ul>\r\n        <p>Year rate: </p>\r\n        <ul>\r\n          <li>+ 3% each year relative to current year</li> \r\n        </ul>\r\n        <p>Plan rate: </p>\r\n        <ul>\r\n          <li>Basic + 20%</li> \r\n          <li>Full + 50%</li> \r\n        </ul>\r\n        <p>*Accumulative increments</p>\r\n      </Msg2>\r\n      </Fragment>\r\n    );\r\n    \r\n}\r\n\r\nPrice.propTypes = {\r\n  quote: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Price;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return(\r\n    <div className=\"sk-cube-grid\">\r\n      <div className=\"sk-cube sk-cube1\"></div>\r\n      <div className=\"sk-cube sk-cube2\"></div>\r\n      <div className=\"sk-cube sk-cube3\"></div>\r\n      <div className=\"sk-cube sk-cube4\"></div>\r\n      <div className=\"sk-cube sk-cube5\"></div>\r\n      <div className=\"sk-cube sk-cube6\"></div>\r\n      <div className=\"sk-cube sk-cube7\"></div>\r\n      <div className=\"sk-cube sk-cube8\"></div>\r\n      <div className=\"sk-cube sk-cube9\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import { useState, Fragment } from 'react';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport Summary from './components/Summary';\nimport Price from './components/Price';\nimport Spinner from './components/Spinner';\nimport styled from '@emotion/styled';\n\nconst Container = styled.div`\n  max-width: 600px;\n  width: 95%;\n  margin: 0 auto;\n  margin-top: 20px;\n`;\nconst ContainerForm = styled.div`\n  background-color: #FFFFFF;\n  padding: 3rem;\n  @media (max-width: 420px) {\n    padding: 1rem;\n  }\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n`;\n\nfunction App() {\n\n  const [ summary, setSummary ] = useState({\n    quote: 0,\n    data: {\n      brand: \"\",\n      year: \"\",\n      plan: \"\"\n    }\n  });\n\n  const [ spinner, setSpinner ] = useState(false);\n\n  // Extract data\n  const { quote, data } = summary;\n\n  return (\n    <Container>\n      <Header \n        title=\"Car Insurance Quote\"\n      />\n      <ContainerForm>\n        <Form \n          setSummary={setSummary}\n          setSpinner={setSpinner}\n        />\n        { spinner &&\n        <Spinner />\n        }\n        { !spinner &&\n        <Fragment>\n          <Summary \n            data={data}\n          />\n          <Price \n            quote={quote}\n          />\n        </Fragment>\n        }\n      </ContainerForm>\n    </Container>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}